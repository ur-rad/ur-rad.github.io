{"version":3,"file":"Series.astro_astro_type_script_index_0_lang.D6KJQTaM.js","sources":["../../src/layouts/Series.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["  const scrollBtn = document.getElementById(\n    \"to-top-button\",\n  ) as HTMLButtonElement;\n  const targetHeader = document.querySelector(\"header\") as HTMLElement;\n\n  function callback(entries: IntersectionObserverEntry[]) {\n    entries.forEach((entry) => {\n      // Show the scroll to top button when the <header> is out of view\n      scrollBtn.dataset.show = (!entry.isIntersecting).toString();\n    });\n  }\n\n  scrollBtn.addEventListener(\"click\", () => {\n    document.documentElement.scrollTo({ behavior: \"smooth\", top: 0 });\n  });\n\n  const observer = new IntersectionObserver(callback);\n  observer.observe(targetHeader);\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["scrollBtn","targetHeader","callback","entries","entry","observer"],"mappings":"AAiVE,MAAMA,EAAY,SAAS,eACzB,eACF,EACMC,EAAe,SAAS,cAAc,QAAQ,EAEpD,SAASC,EAASC,EAAsC,CACtDA,EAAQ,QAASC,GAAU,CAEzBJ,EAAU,QAAQ,MAAQ,CAACI,EAAM,gBAAgB,SAAA,CACnD,CAAC,CACH,CAEAJ,EAAU,iBAAiB,QAAS,IAAM,CACxC,SAAS,gBAAgB,SAAS,CAAE,SAAU,SAAU,IAAK,EAAG,CAClE,CAAC,EAED,MAAMK,EAAW,IAAI,qBAAqBH,CAAQ,EAClDG,EAAS,QAAQJ,CAAY"}