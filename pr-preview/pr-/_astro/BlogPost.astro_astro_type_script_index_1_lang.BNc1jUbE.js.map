{"version":3,"file":"BlogPost.astro_astro_type_script_index_1_lang.BNc1jUbE.js","sources":["../../src/layouts/BlogPost.astro?astro&type=script&index=1&lang.ts"],"sourcesContent":["  // Wait for the content to fully load\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const buttonsPanel = document.getElementById(\"buttons-panel\");\n\n    if (buttonsPanel) {\n      buttonsPanel.classList.add(\"fixed\");\n      console.log(\"Class 'fixed' added to the buttons-panel element.\");\n    } else {\n      console.error(\"Element with ID 'buttons-panel' not found.\");\n    }\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["buttonsPanel"],"mappings":"AAgXE,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMA,EAAe,SAAS,eAAe,eAAe,EAExDA,GACFA,EAAa,UAAU,IAAI,OAAO,EAClC,QAAQ,IAAI,mDAAmD,GAE/D,QAAQ,MAAM,4CAA4C,CAE9D,CAAC"}